[tool.poetry]
name = "aurora"
version = "0.1.0"
description = "Multi-Chain Validator P&L & Partner Commissions - Deterministic, auditable computation of validator revenue and partner commissions across multiple blockchain networks"
authors = ["AG and his AI Crew <amer@globalstake.com>"]
license = "Proprietary"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
pydantic = "^2.0"
pydantic-settings = "^2.5.2"
sqlalchemy = {extras = ["asyncio"], version = "^2.0"}
alembic = "^1.13"
asyncpg = "^0.29"
httpx = "^0.27"
python-jose = {extras = ["cryptography"], version = "^3.3"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
structlog = "^24.1"
pyyaml = "^6.0"
tenacity = "^8.2"
email-validator = "^2.3.0"
bcrypt = ">=4.0,<5.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0"
pytest-asyncio = "^0.23"
pytest-cov = "^4.1"
black = "^24.0"
ruff = "^0.3"
mypy = "^1.9"
types-pyyaml = "^6.0.12.20250915"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.mypy]
python_version = "3.11"
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_calls = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
no_implicit_optional = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing"
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
